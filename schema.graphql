"""
Outbound message sent on Ethereum
"""
type OutboundMessageAcceptedOnEthereum @entity {
  id: ID!
  txHash: String! @index
  blockNumber: Int! @index
  timestamp: DateTime! @index
  messageId: String! @index
  channelId: String @index
  nonce: Int! @index
}

"""
Inbound message received on BridgeHub
"""
type InboundMessageReceivedOnBridgeHub @entity {
  id: ID!
  blockNumber: Int! @index
  timestamp: DateTime! @index
  messageId: String! @index
  channelId: String! @index
  nonce: Int! @index
}

"""
Message processed on polkadot chains
"""
type MessageProcessedOnPolkadot @entity {
  id: ID!
  blockNumber: Int! @index
  timestamp: DateTime! @index
  messageId: String! @index
  paraId: Int! @index
  success: Boolean! @index
}

"""
Outbound message sent on BridgeHub
"""
type OutboundMessageAcceptedOnBridgeHub @entity {
  id: ID!
  blockNumber: Int! @index
  timestamp: DateTime! @index
  messageId: String! @index
  channelId: String @index
  nonce: Int! @index
}

"""
Inbound message dispatched on Ethereum
"""
type InboundMessageDispatchedOnEthereum @entity {
  id: ID!
  txHash: String! @index
  blockNumber: Int! @index
  timestamp: DateTime! @index
  messageId: String! @index
  channelId: String @index
  nonce: Int! @index
  success: Boolean! @index
}

"""
Transfers from Ethereum to Polkadot
"""
type TransferStatusToPolkadot @entity {
  id: ID!
  messageId: String! @index
  txHash: String! @index
  blockNumber: Int! @index
  timestamp: DateTime! @index
  nonce: Int @index
  status: String! @index
  tokenAddress: String
  tokenLocation: String
  senderAddress: String
  destinationParaId: Int
  destinationAddress: String
  amount: BigInt
  channelId: String
  forwardedBlockNumber: Int
  bridgedBlockNumber: Int
  destinationBlockNumber: Int
}

"""
Transfers from Polkadot to Ethereum
"""
type TransferStatusToEthereum @entity {
  id: ID!
  messageId: String! @index
  txHash: String! @index
  blockNumber: Int! @index
  timestamp: DateTime! @index
  nonce: Int @index
  status: String! @index
  tokenAddress: String
  tokenLocation: String
  senderAddress: String
  sourceParaId: Int
  destinationAddress: String
  amount: BigInt
  channelId: String
  forwardedBlockNumber: Int
  bridgedBlockNumber: Int
  destinationBlockNumber: Int
}
