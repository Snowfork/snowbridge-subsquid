{
  "$schema": "https://cdn.subsquid.io/schemas/commands.json",
  "commands": {
    "clean": {
      "description": "delete all build artifacts",
      "cmd": ["npx", "--yes", "rimraf", "lib"]
    },
    "build": {
      "description": "Build the squid project",
      "deps": ["clean"],
      "cmd": ["tsc"]
    },
    "up": {
      "description": "Start a PG database",
      "cmd": ["docker", "compose", "up", "-d"]
    },
    "down": {
      "description": "Drop a PG database",
      "cmd": ["docker", "compose", "down"]
    },
    "codegen": {
      "description": "Generate TypeORM entities from the schema file",
      "cmd": ["squid-typeorm-codegen"]
    },
    "migration:apply": {
      "description": "Apply the DB migrations",
      "cmd": ["squid-typeorm-migration", "apply"]
    },
    "migration:generate": {
      "description": "Generate a DB migration matching the TypeORM entities",
      "deps": ["build", "migration:clean"],
      "cmd": ["squid-typeorm-migration", "generate"]
    },
    "migration:clean": {
      "description": "Clean the migrations folder",
      "cmd": ["npx", "--yes", "rimraf", "./db/migrations"]
    },
    "migration": {
      "deps": ["build"],
      "cmd": ["squid-typeorm-migration", "generate"],
      "hidden": true
    },
    "typegen:ethereum": {
      "description": "Generate data access classes for an ABI file(s)",
      "cmd": [
        "squid-evm-typegen",
        "./src/ethereum/abi",
        { "glob": "./abi/*.json" }
      ]
    },
    "process:ethereum": {
      "description": "Load .env and start the squid processor",
      "deps": ["build", "migration:apply"],
      "cmd": ["node", "--require=dotenv/config", "lib/ethereum/main.js"]
    },
    "generateMeta:bridgehub": {
      "description": "Generate metadata for bridge hub",
      "cmd": [
        "npx",
        "squid-substrate-metadata-explorer",
        "--rpc=wss://bridge-hub-polkadot-rpc.dwellir.com",
        "--out=bridgehub-versions.jsonl"
      ]
    },
    "typegen:bridgehub": {
      "description": "Generate data access classes for an substrate metadata",
      "cmd": ["squid-substrate-typegen", "./typegen-bridgehub.json"]
    },
    "process:bridgehub": {
      "description": "Load .env and start the squid processor",
      "deps": ["build", "migration:apply"],
      "cmd": ["node", "--require=dotenv/config", "lib/bridgehub/main.js"]
    },
    "generateMeta:assethub": {
      "description": "Generate metadata for asset hub",
      "cmd": [
        "npx",
        "squid-substrate-metadata-explorer",
        "--rpc=wss://asset-hub-polkadot-rpc.dwellir.com",
        "--out=assethub-versions.jsonl"
      ]
    },
    "typegen:assethub": {
      "description": "Generate data access classes for an substrate metadata",
      "cmd": ["squid-substrate-typegen", "./typegen-assethub.json"]
    },
    "process:assethub": {
      "description": "Load .env and start the squid processor",
      "deps": ["build", "migration:apply"],
      "cmd": ["node", "--require=dotenv/config", "lib/assethub/main.js"]
    },
    "postprocess": {
      "description": "Update status based on stored data",
      "cmd": ["node", "--require=dotenv/config", "lib/postprocess/start.js"]
    },
    "generateMeta:parachain:moonbeam": {
      "description": "Generate metadata for moonbeam",
      "cmd": [
        "npx",
        "squid-substrate-metadata-explorer",
        "--rpc=wss://moonbeam.ibp.network",
        "--out=moonbeam-versions.jsonl"
      ]
    },
    "typegen:parachain:moonbeam": {
      "description": "Generate data access classes for an moombeam metadata",
      "cmd": ["squid-substrate-typegen", "./typegen-moonbeam.json"]
    },
    "process:parachain:moonbeam": {
      "description": "Load .env and start the squid processor",
      "deps": ["build", "migration:apply"],
      "cmd": [
        "node",
        "--require=dotenv/config",
        "lib/parachains/moonbeam/main.js"
      ]
    },
    "generateMeta:parachain:hydration": {
      "description": "Generate metadata for hydration",
      "cmd": [
        "npx",
        "squid-substrate-metadata-explorer",
        "--rpc=wss://hydration.dotters.network",
        "--out=hydration-versions.jsonl"
      ]
    },
    "typegen:parachain:hydration": {
      "description": "Generate data access classes for hydration metadata",
      "cmd": ["squid-substrate-typegen", "./typegen-hydration.json"]
    },
    "process:parachain:hydration": {
      "description": "Load .env and start the squid processor",
      "deps": ["build", "migration:apply"],
      "cmd": [
        "node",
        "--require=dotenv/config",
        "lib/parachains/hydration/main.js"
      ]
    },
    "serve": {
      "description": "Start the GraphQL API server",
      "cmd": ["squid-graphql-server"]
    },
    "serve:prod": {
      "description": "Start the GraphQL API server with caching and limits",
      "cmd": [
        "squid-graphql-server",
        "--dumb-cache",
        "in-memory",
        "--dumb-cache-ttl",
        "1000",
        "--dumb-cache-size",
        "100",
        "--dumb-cache-max-age",
        "1000"
      ]
    },
    "check-updates": {
      "cmd": [
        "npx",
        "--yes",
        "npm-check-updates",
        "--filter=/subsquid/",
        "--upgrade"
      ],
      "hidden": true
    },
    "bump": {
      "description": "Bump @subsquid packages to the latest versions",
      "deps": ["check-updates"],
      "cmd": ["npm", "i", "-f"]
    },
    "prettier": {
      "cmd": ["npx", "prettier", ".", "--write"]
    }
  }
}
