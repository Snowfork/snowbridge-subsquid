manifestVersion: subsquid.io/v0.1
name: snowbridge-subsquid
version: 2
description: Snowbridge squid
build:
deploy:
  addons:
    postgres:
    rpc:
      - eth.http
      - bridge-hub-polkadot.http
      - asset-hub-polkadot.http
  migrate:
    cmd: ["sqd", "migration:apply"]
  processor:
    - name: ethereum-processor
      env:
        RPC_ETH_HTTP: ${{ secrets.RPC_ETH_HTTP }}
      cmd: ["sqd", "process:ethereum"]
    - name: bridgehub-processor
      env:
        RPC_BRIDGEHUB_POLKADOT: "wss://bridge-hub-polkadot-rpc.dwellir.com"
      cmd: ["sqd", "process:bridgehub"]
    - name: assethub-processor
      env:
        RPC_ASSETHUB_POLKADOT: "wss://asset-hub-polkadot-rpc.dwellir.com"
      cmd: ["sqd", "process:assethub"]
    - name: post-processor
      cmd: ["sqd", "postprocess"]
    - name: hydration-processor
      env:
        RPC_HYDRATION: "wss://hydration-rpc.n.dwellir.com"
      cmd: ["sqd", "process:parachain:hydration"]
    - name: moonbeam-processor
      env:
        RPC_MOONBEAM: "wss://moonbeam.ibp.network"
      cmd: ["sqd", "process:parachain:moonbeam"]
    - name: acala-processor
      env:
        RPC_ACALA: "wss://acala-rpc-3.aca-api.network/ws"
      cmd: ["sqd", "process:parachain:acala"]
    - name: bifrost-processor
      env:
        RPC_BIFROST: "wss://bifrost-polkadot-rpc.dwellir.com"
      cmd: ["sqd", "process:parachain:bifrost"]
    - name: mythos-processor
      env:
        RPC_MYTHOS: "wss://polkadot-mythos-rpc.polkadot.io"
      cmd: ["sqd", "process:parachain:mythos"]
  api:
    cmd: ["sqd", "serve:prod"]
scale:
  addons:
    postgres:
      storage: 100G
      profile: small
  processor:
    profile: medium
  api:
    profile: small
